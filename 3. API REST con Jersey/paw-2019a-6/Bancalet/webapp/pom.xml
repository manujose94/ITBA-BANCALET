<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>bancalet</artifactId>
		<groupId>ar.edu.itba.paw</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>webapp</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>war</packaging>

	<name>webapp</name>
	<!-- FIXME change it to the project's website -->
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<angular.project.location>restclient</angular.project.location>
    	<angular.project.nodeinstallation>node_installation</angular.project.nodeinstallation>
    	<project.basedir>./</project.basedir>
    	<project.build.directory>target</project.build.directory>
	</properties>
	
	<dependencies>
		<!-- JERSEY -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring4</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.hk2</groupId>
					<artifactId>hk2</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency>
			<groupId>org.glassfish.hk2</groupId>
			<artifactId>hk2</artifactId>
		</dependency>-->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-jaxb</artifactId>
		</dependency>
		
		<!-- JWT -->
		<dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>
		
		<!-- SPRING -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
		    <groupId>javax.servlet.jsp</groupId>
		    <artifactId>javax.servlet.jsp-api</artifactId>
		    <version>${javax.servlet.jsp.versin}</version>
		</dependency>
		<dependency>
	    	<groupId>javax.transaction</groupId>
	    	<artifactId>javax.transaction-api</artifactId>
	    	</dependency>
		<!-- https://mvnrepository.com/artifact/org.webjars/material-design-lite -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>material-design-lite</artifactId>
			<version>${org.webjars.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>ar.edu.itba.paw</groupId>
			<artifactId>interface</artifactId>
			<version>${parent.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>ar.edu.itba.paw</groupId>
			<artifactId>service</artifactId>
			<version>${parent.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ar.edu.itba.paw</groupId>
			<artifactId>persistence</artifactId>
			<version>${parent.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>4.2.5.RELEASE</version>
		</dependency>
		<!--  Mailing  -->
	    <dependency>
	      <groupId>com.sun.mail</groupId>
	      <artifactId>javax.mail</artifactId>
	      </dependency>
	    <dependency>
	      <groupId>javax.mail</groupId>
	      <artifactId>javax.mail-api</artifactId>
	      </dependency>
	    <dependency>
	      <groupId>commons-io</groupId>
	      <artifactId>commons-io</artifactId>
	      </dependency>
	    <dependency>
	      <groupId>org.springframework</groupId>
	      <artifactId>spring-context-support</artifactId>
	      </dependency>
		<!--Logging-->
	    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>slf4j-api</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>ch.qos.logback</groupId>
	      <artifactId>logback-classic</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>ch.qos.logback</groupId>
	      <artifactId>logback-core</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>jcl-over-slf4j</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>org.logback-extensions</groupId>
	      <artifactId>logback-ext-spring</artifactId>
	    </dependency>
	    <dependency>
	            <groupId>commons-fileupload</groupId>
	            <artifactId>commons-fileupload</artifactId>
	            </dependency>
        <dependency>
              <groupId>commons-codec</groupId>
              <artifactId>commons-codec</artifactId>
              </dependency>
	</dependencies>
	<build>
		<finalName>app</finalName>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven 
				defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
		          <groupId>org.apache.tomcat.maven</groupId>
		          <artifactId>tomcat7-maven-plugin</artifactId>
		          <version>${org.apache.tomcat.maven.version}</version>
		        </plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
		          <artifactId>maven-resources-plugin</artifactId>
		          <version>${maven-resources-plugin.version}</version>
		        </plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>**/logback-test.xml</exclude>
						</excludes>
					</configuration>
				</plugin>
				
				<!-- CLIENTE REST -->
				<plugin>
		            <groupId>com.github.eirslett</groupId>
		            <artifactId>frontend-maven-plugin</artifactId>
		            <!-- Use the latest released version:
			        https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
			        <version>1.6</version>
		            <configuration>
		                <workingDirectory>${angular.project.location}</workingDirectory>
		                <installDirectory>${angular.project.nodeinstallation}</installDirectory>
		            </configuration>
		            <executions>
		                <!-- It will install nodejs and npm -->
		                <execution>
		                    <id>install node and npm</id>
		                    <goals>
		                        <goal>install-node-and-npm</goal>
		                    </goals>
		                    <configuration>
		                        <nodeVersion>v10.16.0</nodeVersion>
		                        <npmVersion>6.9.0</npmVersion>
		                    </configuration>
		                </execution>
		
		                <!-- It will execute command "npm install" inside "/e2e-angular2" directory -->
		                <execution>
		                    <id>npm install</id>
		                    <goals>
		                        <goal>npm</goal>
		                    </goals>
		                    <configuration>
		                        <arguments>install</arguments>
		                    </configuration>
		                </execution>
		                <!-- It will execute command "npm build" inside "/e2e-angular2" directory 
		                    to clean and create "/dist" directory -->
		                <execution>
		                    <id>npm build</id>
		                    <goals>
		                        <goal>npm</goal>
		                    </goals>
		                    <configuration>
		                        <arguments>run build</arguments>
		                    </configuration>
		                </execution>
		            </executions>
		        </plugin>
		
		        <!-- Plugin to copy the content of /angular/dist/ directory to output 
		            directory (ie/ /target/transactionManager-1.0/) -->
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-resources-plugin</artifactId>
		            <version>2.4.2</version>
		            <executions>
		                <execution>
		                    <id>default-copy-resources</id>
		                    <phase>process-resources</phase>
		                    <goals>
		                        <goal>copy-resources</goal>
		                    </goals>
		                    <configuration>
		                        <overwrite>true</overwrite>
		                        <!-- This folder is the folder where your angular files 
		                        will be copied to. It must match the resulting war-file name.
		                        So if you have customized the name of war-file for ex. as "app.war"
		                        then below value should be ${project.build.directory}/app/ 
		                        Value given below is as per default war-file name -->
		                       	<outputDirectory>${project.build.directory}/app/</outputDirectory>
		                        <resources>
		                            <resource>
		                                <directory>${project.basedir}/${angular.project.location}/www</directory>
		                            </resource>
		                        </resources>
		                    </configuration>
		                </execution>
		            </executions>
		        </plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
